# This is a basic workflow to help you get started with Actions

name: EMU3

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run-emulator:
    runs-on: macos-12
  
    steps: 
    
    #- name: set up JDK 17
     # uses: actions/setup-java@v3
      #with:
       # java-version: '17'
        #distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Setup gradle
      uses: gradle/gradle-build-action@v2    
        
    - name: Create Android emulator
      run: |
        # install the hardware acceleration
        echo " Installing Hardware Acceleration Manager..."
        sudo $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "extras;intel;Hardware_Accelerated_Execution_Manager"
        # brew install intel-haxm
        sysctl kern.hv_support
        sdkmanager --install "system-images;android-31;google_apis;x86_64"
        echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --licenses
        echo "no" | avdmanager --verbose create avd --force --name TestAvd123 --abi google_apis/x86_64 --package 'system-images;android-31;google_apis;x86_64'
        echo "AVD created:"
        "$ANDROID_HOME/emulator/emulator" -list-avds
        if false; then
          emulator_config=~/.android/avd/TestAvd123.avd/config.ini
          # The following madness is to support empty OR populated config.ini files,
          # the state of which is dependant on the version of the emulator used (which we don't control),
          # so let's be defensive to be safe.
          # Replace existing config (NOTE we're on MacOS so sed works differently!)
          sed -i .bak 's/hw.lcd.density=.*/hw.lcd.density=420/' "$emulator_config"
          sed -i .bak 's/hw.lcd.height=.*/hw.lcd.height=1920/' "$emulator_config"
          sed -i .bak 's/hw.lcd.width=.*/hw.lcd.width=1080/' "$emulator_config"
          # Or, add new config
          if ! grep -q "hw.lcd.density" "$emulator_config"; then
            echo "hw.lcd.density=420" >> "$emulator_config"
          fi
          if ! grep -q "hw.lcd.height" "$emulator_config"; then
            echo "hw.lcd.height=1920" >> "$emulator_config"
          fi
          if ! grep -q "hw.lcd.width" "$emulator_config"; then
            echo "hw.lcd.width=1080" >> "$emulator_config"
          fi
          echo "Emulator settings ($emulator_config)"
          cat "$emulator_config"
          fi
          
        echo "Starting the Android emulator..."
        export ANDROID_EMULATOR_DEBUG=1
        ###nohup "$ANDROID_HOME/emulator/emulator" -avd TestAvd123 -accel on -gpu swiftshader_indirect -no-snapshot-load 2>&1 &
        ###$ANDROID_HOME/platform-tools/adb wait-for-device
        nohup $ANDROID_HOME/tools/emulator -avd TestAvd123 -gpu host -no-audio -no-boot-anim -camera-back none -camera-front none -qemu -m 2048 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do echo "wait..."; sleep 1; done; input keyevent 82'
        echo "Emulator has finished booting"
        $ANDROID_HOME/platform-tools/adb devices
        sleep 45
        screencapture screenshot.jpg
        $ANDROID_HOME/platform-tools/adb exec-out screencap -p > emulator.png
          
    - name: install recorder and record session
      run: |
          brew install ffmpeg
          $ANDROID_HOME/tools/emulator -port 18725 -verbose -accel on -no-audio -gpu swiftshader_indirect @TestAvd123 &
          ffmpeg -f avfoundation -i 0 -t 45 out.mov
          # node -e "const exec = require('child_process'); exec.exec('ffmpeg -f avfoundation -i 0 -t 120 out.mov'); exec.exec('$ANDROID_HOME/tools/emulator -port 18725 -verbose -no-window -no-audio -gpu swiftshader_indirect @Pixel_5_API_31 &');"
      env:
           HOMEBREW_NO_INSTALL_CLEANUP: 1
          
    - name: upload video
      uses: actions/upload-artifact@master
      with:
            name: out
            path: out.mov
             
    - uses: actions/upload-artifact@v3
      with:
           name: screenshot.jpg
           path: screenshot.jpg
             
    - uses: actions/upload-artifact@v3
      with:
           name: emulator.png
           path: emulator.png
