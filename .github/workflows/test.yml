# This is a basic workflow to help you get started with Actions
name: test
# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  build:
   runs-on: ubuntu-22.04
    # Steps represent a sequence of tasks that will be executed as part of the job
   steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # sudo apt-get install libz1 libncurses5 libbz2-1.0:i386 libstdc++6 libbz2-1.0 , sudo apt-get install libpulse0:i386
      # Runs a set of commands using the runners shell
      - name: Install libpulse0
        run: |
          sudo apt-get install libpulse0
          
      - name : Install accel
        run: |
          sudo apt-get install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils
          virsh list --all
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        
      - name: Create Android emulator
        run: |        
          echo "y" | sdkmanager --install "system-images;android-31;google_apis;x86_64"
          echo "y" | sdkmanager --licenses
        
          avdmanager create avd --name testAVD -d pixel --abi google_apis/x86_64 --package 'system-images;android-31;google_apis;x86_64'
          $ANDROID_HOME/emulator/emulator -list-avds
          if false; then
          emulator_config=~/.android/avd/testAVD.avd/config.ini
          # The following madness is to support empty OR populated config.ini files,
          # the state of which is dependant on the version of the emulator used (which we don't control),
          # so let's be defensive to be safe.
          # Replace existing config (NOTE we're on MacOS so sed works differently!)
          sed -i .bak 's/hw.lcd.density=.*/hw.lcd.density=420/' "$emulator_config"
          sed -i .bak 's/hw.lcd.height=.*/hw.lcd.height=1920/' "$emulator_config"
          sed -i .bak 's/hw.lcd.width=.*/hw.lcd.width=1080/' "$emulator_config"
          # Or, add new config
          if ! grep -q "hw.lcd.density" "$emulator_config"; then
            echo "hw.lcd.density=420" >> "$emulator_config"
          fi
          if ! grep -q "hw.lcd.height" "$emulator_config"; then
            echo "hw.lcd.height=1920" >> "$emulator_config"
          fi
          if ! grep -q "hw.lcd.width" "$emulator_config"; then
            echo "hw.lcd.width=1080" >> "$emulator_config"
          fi
          echo "Emulator settings ($emulator_config)"
          cat "$emulator_config"
          fi
      #- name : Check for acceleration
      #  run: |
      #    $ANDROID_HOME/tools/emulator -avd testAVD -accel-check    
      - name: Launch Emulator
        run: |       
          echo "Starting emulator  and waiting for boot to complete...."
          ls -la $ANDROID_HOME/emulator
          $ANDROID_HOME/tools/emulator -avd testAVD -noaudio -no-window -no-boot-anim -camera-back none -camera-front none -memory 2048 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device 
          echo "Emulator has finished booting"
          $ANDROID_HOME/platform-tools/adb devices
          sleep 30
          screencapture screenshot.jpg
          $ANDROID_HOME/platform-tools/adb exec-out screencap -p > emulator.png
      - name: install recorder and record session
        run: |
          brew install ffmpeg
          $ANDROID_HOME/tools/emulator -port 18725 -verbose -no-window -no-audio -gpu swiftshader_indirect @Pixel_API_29_AOSP &
          ffmpeg -f avfoundation -i 0 -t 120 out.mov
      # node -e "const exec = require('child_process'); exec.exec('ffmpeg -f avfoundation -i 0 -t 120 out.mov'); exec.exec('$ANDROID_HOME/tools/emulator -port 18725 -verbose -no-window -no-audio -gpu swiftshader_indirect @Pixel_5_API_31 &');"
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: 1
      - name: upload video
        uses: actions/upload-artifact@master
        with:
         name: out
         path: out.mov
          
      - uses: actions/upload-artifact@v3
        with:
         name: screenshot.jpg
         path: screenshot.jpg
          
      - uses: actions/upload-artifact@v3
        with:
         name: emulator.png
         path: emulator.png
